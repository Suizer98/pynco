language: minimal
sudo: false # use container based build
notifications:
  email: false

matrix:
  fast_finish: true
  include:
  - env:
    - CONDA_ENV=3.7
    - NCO_VERSION=latest
  - env:
    - CONDA_ENV=3.8
    - NCO_VERSION=latest
  - env:
    - CONDA_ENV=3.9
    - NCO_VERSION=latest
  - env:
    - CONDA_ENV=3.10
    - NCO_VERSION=latest
  - env:
    - CONDA_ENV=3.11
    - NCO_VERSION=latest

before_install:
  # Install miniconda
  # -----------------
  - export CONDA_BASE=http://repo.continuum.io/miniconda/Miniconda
  - wget ${CONDA_BASE}3-latest-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"

  # Create the basic testing environment
  # ------------------------------------
  - conda config --set always_yes yes --set changeps1 no
  - conda config --set show_channel_urls True
  - conda config --add create_default_packages pip
  - conda update --quiet conda

  # Add 3rd party channels
  # ------------------------------------
  - conda config --add channels conda-forge

  # Create our environment
  # ------------------------------------
  - conda env create --name test_env --quiet --file ci/requirements-$CONDA_ENV.yml
  - source activate test_env
  - if [ "${NCO_VERSION}" == "latest" ];
    then conda install nco;
    else conda install nco==${NCO_VERSION};
    fi

  # Debugging information
  # ------------------------------------
  - conda info -a
  - conda list --export
  - which ncks ncdump

  # Install pynco
  # ------------------------------------
  - python setup.py install

# command to run tests
script:
  - python -c "from nco import Nco"
  - py.test -rxs -s -v
